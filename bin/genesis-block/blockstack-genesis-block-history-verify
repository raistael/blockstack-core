#!/bin/bash

# This script will take a genesis block's commit history generated by
# the blockstack-genesis-block-history-extract program and verify
# its authenticity using the public keys it contains.

set -e

GENESIS_BLOCK_HISTORY_PATH="$1"
if [ -z "$GENESIS_BLOCK_HISTORY_PATH" ]; then 
    echo "usage: $0 /path/to/genesis/block/history.json"
    exit 1
fi

WORKDIR="$(mktemp -d)"
pushd "$WORKDIR" >/dev/null

GPGDIR="./.gnupg"
mkdir -p "$GPGDIR"

# unpack keys 
cat "$GENESIS_BLOCK_HISTORY_PATH" | jq ".keys" | jq "keys" | jq -r ".[]" | \
while IFS= read KEY_ID; do 
   printf -- "$(cat "$GENESIS_BLOCK_HISTORY_PATH" | jq -r ".keys.$KEY_ID")" > ".key.txt"
   printf "\n" >> ".key.txt"
   gpg --homedir "$GPGDIR" --import ".key.txt" >/dev/null 2>&1
   RC="$?"

   if [ "$RC" -ne "0" ]; then 
      echo "failed to import $KEY_ID"
      exit 1
   fi

   # make sure this key loads (i.e. matches the key ID)
   gpg --homedir "$GPGDIR" --export -a "$KEY_ID" > ".key-out.txt" 2>/dev/null
   cmp ".key.txt" ".key-out.txt" >/dev/null 2>&1
   if [ "$?" -ne 0 ]; then 
      echo "Key mismatch for $KEY_ID"
      exit 1
   fi
done

RC=$?

if [ "$RC" -ne "0" ]; then 
   echo "failed to import keys"
   exit 1
fi

# unpack untrusted commits and verify them 
cat "$GENESIS_BLOCK_HISTORY_PATH" | jq '.commits | map(select(.trusted == "false")) | map(.object)[]' | \
while IFS= read -r OBJECT_TEXT; do
   OBJECT_TEXT="${OBJECT_TEXT%\"}"
   OBJECT_TEXT="${OBJECT_TEXT#\"}"

   printf -- "$OBJECT_TEXT" | grep -B 9999 'BEGIN PGP SIGNATURE-----' | head -n -1 > ".commit-stripped"
   printf -- "$OBJECT_TEXT" | grep -A 9999 'END PGP SIGNATURE-----' | tail -n +2 >> ".commit-stripped"
   printf -- "$OBJECT_TEXT" > ".commit.sig.tmp"
   sed 's/^gpgsig //' ".commit.sig.tmp" | sed 's/^ //' > ".commit.sig"

   gpg --homedir "$GPGDIR" --verify ".commit.sig" ".commit-stripped" >/dev/null 2>&1
   RC="$?"

   if [ "$RC" -ne "0" ]; then 
      echo "failed to verify commit"
      printf "$OBJECT_TXT"
      exit 1
   fi
done

RC=$?

if [ "$RC" -ne "0" ]; then 
   echo "failed to verify history"
   exit 1
fi

popd >/dev/null
rm -rf "$WORKDIR"
exit 0
